type SrcTxExecutorOwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes!
  newOwner: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type CCSmartWalletAddressUpdated @entity {
  id: ID!
  oldAddress: Bytes!
  newAddress: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type SrcCrossSwap @entity {
  id: ID!
  srcToken: Bytes!
  srcAmount: BigInt!
  destChainId: BigInt!
  destToken: Bytes!
  minDestAmount: BigInt!
  logIndex: BigInt!
  destUser: Bytes!
  usdcIncome: BigInt!
  initiator: Bytes!
  srcTransactionHash: Bytes!
  txHash: Bytes!
  txGasUsed: BigInt!
  txGasPrice: BigInt!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type ArbitraryTxWasSent @entity {
  id: ID!
  to: Bytes!
  callData: Bytes!
  initiator: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type Deposit @entity {
  id: ID!
  sender: Bytes!
  amount: BigInt!
  initiator: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type MarketMakerUpdated @entity {
  id: ID!
  oldMarketMaker: Bytes!
  newMarketMaker: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type DestCrossSwap @entity {
  id: ID!
  srcChainId: BigInt!
  srcTransactionHash: Bytes!
  srcToken: Bytes!
  srcAmount: BigInt!
  destToken: Bytes!
  destAmount: BigInt!
  destUser: Bytes!
  usdcOutcome: BigInt!
  initiator: Bytes!
  destTransactionHash: Bytes!
  txHash: Bytes!
  txGasUsed: BigInt!
  txGasPrice: BigInt!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type CCSmartWalletOwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes!
  newOwner: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type SrcTxExecutorUpdated @entity {
  id: ID!
  oldSrcTxExecutor: Bytes!
  newSrcTxExecutor: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type OracleAdded @entity {
  id: ID!
  oracle: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type OracleRemoved @entity {
  id: ID!
  oracle: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type OracleProviderOwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes!
  newOwner: Bytes!
  txHash: Bytes!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}
