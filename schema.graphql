type SrcCrossSwap @entity {
  id: ID!

  srcToken: Bytes!
  srcAmount: BigInt!
  destChainId: BigInt!
  destToken: Bytes!
  minDestAmount: BigInt!
  destUser: Bytes!

  connectorToken: Bytes!
  connectorTokenIncome: BigInt!

  refundAddress: Bytes!
  liquidityProvider: String!

  initiator: Bytes!
  txHash: Bytes!
  txGasUsed: BigInt!
  txGasPrice: BigInt!

  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type DestCrossSwap @entity {
  id: ID!

  srcChainId: BigInt!
  srcTransactionHash: Bytes!
  srcToken: Bytes!
  srcAmount: BigInt!
  destToken: Bytes!
  destAmount: BigInt!
  destUser: Bytes!

  connectorToken: Bytes!
  connectorTokenOutcome: BigInt!
  liquidityProvider: String!

  initiator: Bytes!

  txHash: Bytes!
  txGasUsed: BigInt!
  txGasPrice: BigInt!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type MultichainTransfer @entity {
  id: ID!

  srcTransactionHash: Bytes!
  anyToken: Bytes!
  to: Bytes!
  amount: BigInt!
  fromChainId: BigInt!
  # current chain id in thegraph
  toChainId: BigInt!

  txHash: Bytes!
  txGasUsed: BigInt!
  txGasPrice: BigInt!
  blockHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
}