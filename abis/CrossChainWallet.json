[
   {
      "inputs": [
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "decimals",
                  "type": "uint256"
               },
               {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
               }
            ],
            "internalType": "struct ConnectorTokensDecimalsFacet.ConnectorTokenArgs[]",
            "name": "_connectorTokens",
            "type": "tuple[]"
         }
      ],
      "name": "addWhitelistedConnectorTokenDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "uint256",
            "name": "_chainId",
            "type": "uint256"
         },
         {
            "internalType": "address",
            "name": "_connectorToken",
            "type": "address"
         }
      ],
      "name": "removeWhitelistedConnectorTokenDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "uint256",
            "name": "_chainId",
            "type": "uint256"
         },
         {
            "internalType": "address",
            "name": "_connectorToken",
            "type": "address"
         }
      ],
      "name": "whitelistedConnectorTokenDecimals",
      "outputs": [
         {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
               }
            ],
            "internalType": "struct CrossChainRoutersFacet.CrossChainRouterArgs[]",
            "name": "_routers",
            "type": "tuple[]"
         }
      ],
      "name": "addCrossChainRouters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "uint256",
            "name": "_chainId",
            "type": "uint256"
         }
      ],
      "name": "crossChainRouter",
      "outputs": [
         {
            "internalType": "address",
            "name": "",
            "type": "address"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "uint256",
            "name": "_chainId",
            "type": "uint256"
         }
      ],
      "name": "removeCrossChainRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_to",
            "type": "address"
         },
         {
            "internalType": "uint256",
            "name": "_value",
            "type": "uint256"
         },
         {
            "internalType": "bytes",
            "name": "_callData",
            "type": "bytes"
         }
      ],
      "name": "execute",
      "outputs": [
         {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
         }
      ],
      "stateMutability": "payable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "components": [
               {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
               },
               {
                  "internalType": "bytes32",
                  "name": "txHash",
                  "type": "bytes32"
               },
               {
                  "internalType": "address",
                  "name": "srcToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "srcAmount",
                  "type": "uint256"
               },
               {
                  "internalType": "uint256",
                  "name": "destChainId",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "destToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "minDestAmount",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "destUser",
                  "type": "address"
               },
               {
                  "internalType": "address",
                  "name": "connectorToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "connectorTokenIncome",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
               },
               {
                  "internalType": "string",
                  "name": "liquidityProvider",
                  "type": "string"
               }
            ],
            "internalType": "struct LibDestCrossSwap.SrcCrossSwapEvent",
            "name": "srcEvent",
            "type": "tuple"
         },
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
               },
               {
                  "internalType": "address",
                  "name": "approveProxy",
                  "type": "address"
               },
               {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
               }
            ],
            "internalType": "struct LibDestCrossSwap.SwapArgs",
            "name": "destSwapArgs",
            "type": "tuple"
         },
         {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
         },
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "connectorToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "gasCompensation",
                  "type": "uint256"
               }
            ],
            "internalType": "struct LibDestCrossSwap.ExecutorArgs",
            "name": "executorArgs",
            "type": "tuple"
         }
      ],
      "name": "finishCrossSwap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
         },
         {
            "internalType": "address",
            "name": "refundToken",
            "type": "address"
         },
         {
            "components": [
               {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
               },
               {
                  "internalType": "bytes32",
                  "name": "txHash",
                  "type": "bytes32"
               },
               {
                  "internalType": "address",
                  "name": "srcToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "srcAmount",
                  "type": "uint256"
               },
               {
                  "internalType": "uint256",
                  "name": "destChainId",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "destToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "minDestAmount",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "destUser",
                  "type": "address"
               },
               {
                  "internalType": "address",
                  "name": "connectorToken",
                  "type": "address"
               },
               {
                  "internalType": "uint256",
                  "name": "connectorTokenIncome",
                  "type": "uint256"
               },
               {
                  "internalType": "address",
                  "name": "refundAddress",
                  "type": "address"
               },
               {
                  "internalType": "string",
                  "name": "liquidityProvider",
                  "type": "string"
               }
            ],
            "internalType": "struct LibDestCrossSwap.SrcCrossSwapEvent",
            "name": "srcEvent",
            "type": "tuple"
         }
      ],
      "name": "refundSrcTransaction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_initializationContractAddress",
            "type": "address"
         },
         {
            "internalType": "bytes",
            "name": "_calldata",
            "type": "bytes"
         }
      ],
      "name": "InitializationFunctionReverted",
      "type": "error"
   },
   {
      "anonymous": false,
      "inputs": [
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
               },
               {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
               },
               {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
               }
            ],
            "indexed": false,
            "internalType": "struct IDiamondCut.FacetCut[]",
            "name": "_diamondCut",
            "type": "tuple[]"
         },
         {
            "indexed": false,
            "internalType": "address",
            "name": "_init",
            "type": "address"
         },
         {
            "indexed": false,
            "internalType": "bytes",
            "name": "_calldata",
            "type": "bytes"
         }
      ],
      "name": "DiamondCut",
      "type": "event"
   },
   {
      "inputs": [
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
               },
               {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
               },
               {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
               }
            ],
            "internalType": "struct IDiamondCut.FacetCut[]",
            "name": "_diamondCut",
            "type": "tuple[]"
         },
         {
            "internalType": "address",
            "name": "_init",
            "type": "address"
         },
         {
            "internalType": "bytes",
            "name": "_calldata",
            "type": "bytes"
         }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "bytes4",
            "name": "_functionSelector",
            "type": "bytes4"
         }
      ],
      "name": "facetAddress",
      "outputs": [
         {
            "internalType": "address",
            "name": "facetAddress_",
            "type": "address"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [],
      "name": "facetAddresses",
      "outputs": [
         {
            "internalType": "address[]",
            "name": "facetAddresses_",
            "type": "address[]"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_facet",
            "type": "address"
         }
      ],
      "name": "facetFunctionSelectors",
      "outputs": [
         {
            "internalType": "bytes4[]",
            "name": "facetFunctionSelectors_",
            "type": "bytes4[]"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [],
      "name": "facets",
      "outputs": [
         {
            "components": [
               {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
               },
               {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
               }
            ],
            "internalType": "struct IDiamondLoupe.Facet[]",
            "name": "facets_",
            "type": "tuple[]"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "bytes4",
            "name": "_interfaceId",
            "type": "bytes4"
         }
      ],
      "name": "supportsInterface",
      "outputs": [
         {
            "internalType": "bool",
            "name": "",
            "type": "bool"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "anonymous": false,
      "inputs": [
         {
            "indexed": false,
            "internalType": "uint256",
            "name": "srcChainId",
            "type": "uint256"
         },
         {
            "indexed": false,
            "internalType": "bytes32",
            "name": "srcTransactionHash",
            "type": "bytes32"
         },
         {
            "indexed": false,
            "internalType": "address",
            "name": "destToken",
            "type": "address"
         },
         {
            "indexed": false,
            "internalType": "uint256",
            "name": "destAmount",
            "type": "uint256"
         },
         {
            "indexed": false,
            "internalType": "address",
            "name": "destUser",
            "type": "address"
         },
         {
            "indexed": false,
            "internalType": "address",
            "name": "connectorToken",
            "type": "address"
         },
         {
            "indexed": false,
            "internalType": "uint256",
            "name": "protocolFee",
            "type": "uint256"
         },
         {
            "indexed": false,
            "internalType": "uint256",
            "name": "gasCompensation",
            "type": "uint256"
         },
         {
            "indexed": false,
            "internalType": "string",
            "name": "liquidityProvider",
            "type": "string"
         }
      ],
      "name": "DestCrossSwap",
      "type": "event"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_signersRegistry",
            "type": "address"
         }
      ],
      "name": "setSignersRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [],
      "name": "signersRegistry",
      "outputs": [
         {
            "internalType": "address",
            "name": "",
            "type": "address"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "anonymous": false,
      "inputs": [
         {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
         },
         {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
         }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
   },
   {
      "inputs": [],
      "name": "owner",
      "outputs": [
         {
            "internalType": "address",
            "name": "owner_",
            "type": "address"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_newOwner",
            "type": "address"
         }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_swapProvider",
            "type": "address"
         }
      ],
      "name": "addWhitelistedSwapProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_swapProvider",
            "type": "address"
         }
      ],
      "name": "removeWhitelistedSwapProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_swapProvider",
            "type": "address"
         }
      ],
      "name": "whitelistedSwapProvider",
      "outputs": [
         {
            "internalType": "bool",
            "name": "",
            "type": "bool"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_token",
            "type": "address"
         },
         {
            "internalType": "address",
            "name": "_claimTo",
            "type": "address"
         }
      ],
      "name": "claimGasCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_receiver",
            "type": "address"
         },
         {
            "internalType": "address",
            "name": "_token",
            "type": "address"
         }
      ],
      "name": "gasCompensation",
      "outputs": [
         {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "address",
            "name": "_token",
            "type": "address"
         }
      ],
      "name": "protocolFee",
      "outputs": [
         {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [],
      "name": "protocolFeeRate",
      "outputs": [
         {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
         }
      ],
      "stateMutability": "view",
      "type": "function"
   },
   {
      "inputs": [
         {
            "internalType": "uint256",
            "name": "_protocolFeeRate",
            "type": "uint256"
         }
      ],
      "name": "setProtocolFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
   }
]